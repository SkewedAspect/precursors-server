% An example of a config file.  Defines mostly defaults.
[
% it's generally a good idea to have a logger configured.
% precursors uses lager.  For move information on the configuration here,
% see https://github.com/basho/lager
{lager, [
	{handlers, [
		{lager_console_backend, [info,true]},
		{lager_file_backend, [
			{"debug.log", debug, 10485760, "", 5}
		]}
	]},
	{crash_log, "crash.log"}
]},

% disable the progress reports sasl normally outputs, but keep the error
% reports.
{sasl, [
	{errlog_type, error}
]},

% And finally the configuration for the precursors server proper.
{precursors_server, [

	% define the list of nodes to be used in the precursors cluster.
	% at least one node should be defined.
	{nodes, ['precursors_server@hostname']},
	
	% Configure the authentication system
	% The authentication is based on backends, will fall-through.
	% {Callback_modoule :: atom(),
	% Priority :: pos_integer(),
	% StartArgs :: any())}
	% Backends are checked in order of priority from least to greatest
	% if no backends are set, everyone is denied.
	{auth_backends, [
	{auth_backends, [
		{mongo_auth, 1, []},
		{callback_module_two, 5, [{username, "goober"}, {password, "pants"}]}
	]},

	% Configure the listener supervisor; which ports to listen on etc.
	% if these settings are missing, all defaults are used.
	{listener, [

		% The ssl listener; default values are shown.
		{ssl_port_opts, [
			{port, 6006},
			{certfile, "priv/precursors.crt"},
			{keyfile, "priv/key"},
			{poolsize, 5}
		]},

		% The Tcp listener; default values are shown.
		{tcp_port_opts, [
			{port, 6007},
			{poolsize, 5}
		]}
	]},

	% configure the entity engine as well as the entity channel
	{entity_engine, [
		
		% initial number of workers to work on serving up entity data.
		% default shown
		{workers, 1}

	]},

	% configure the channel for entities
	{entity_channel, [
		% same as entity_engine
		{workers, 1}
	]}

]},

% plugins are thier own apps, and can have configuration here as well
{plugin_app, [
	{goober, "pants"},
	{up, down}
]}

% all done!
].

% vim: ft=erlang
